version: '2'
services:
  auth:
    build:
      context: ./
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
      - rabbitmq
    volumes:
      - .:/usr/src/apps
      - /usr/src/apps/node_modules
    ports:
      - '3000:3000'

  task:
    build:
      context: .
      dockerfile: ./apps/task/Dockerfile
      target: development
    command: npm run start:dev task
    env_file:
      - ./.env
    depends_on:
      - auth
      - redis
      - postgres
      - rabbitmq
    volumes:
      - .:/usr/src/apps
      - /usr/src/apps/node_modules
    ports:
      - '3001:3001'

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - .env

  postgres:
    image: postgres
    env_file:
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  redis:
    image: redis:6.2-alpine
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    networks:
      - task_net
    volumes:
      - redis_data:/data

  postgres_admin:
    image: dpage/pgadmin4
    depends_on:
      - postgres
    env_file:
      - .env
    ports:
      - '15432:80'

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  task_net:
    driver: bridge
